name: Create tag and release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to tag'
        required: true
      tag:
        description: 'Tag name'
        required: true

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
      - name: Create tag
        run: |
          git checkout ${{ github.event.inputs.branch }}
          git tag ${{ github.event.inputs.tag }}
          git push origin ${{ github.event.inputs.tag }}

  release:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          draft: false
          prerelease: false
      - name: Get changes
        id: get_changes
        run: |
          echo 'RELEASE_BODY<<EOF' >> $GITHUB_ENV
          git log --merges --pretty=format:"- %s" ${{ github.event.inputs.tag }}@{1}..${{ github.event.inputs.tag }} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Update release
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const release = await github.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: '${{ github.event.inputs.tag }}'
            })
            await github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              body: process.env.RELEASE_BODY
            })
