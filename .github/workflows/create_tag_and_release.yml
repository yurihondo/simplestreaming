name: Create Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to create release from'
        required: true
      tag:
        description: 'Tag name'
        required: true
      tag_previous:
        description: 'Previous tag name'
        required: true

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install jq

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"

      - name: Create tag
        run: |
          git fetch --all --tags
          git checkout ${{ github.event.inputs.branch }}
          git tag ${{ github.event.inputs.tag }}
          git push origin ${{ github.event.inputs.tag }}

      - name: Generate release notes
        id: generate_release_notes
        run: |
          NOTES=$(git log --merges --oneline ${{ github.event.inputs.before_tag }}..${{ github.event.inputs.new_tag }})
          if [ -z "$NOTES" ]; then
            NOTES=$(git log --oneline ${{ github.event.inputs.before_tag }}..${{ github.event.inputs.new_tag }})
          fi
          echo ::set-output name=notes::$NOTES

      - name: Create release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const notes = "${{ steps.generate_release_notes.outputs.notes }}"
            await github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ github.event.inputs.new_tag }}",
              name: "${{ github.event.inputs.new_tag }}",
              body: notes
            })
