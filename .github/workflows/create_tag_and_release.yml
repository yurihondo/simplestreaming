name: Create Tag and Release

on: 
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to tag'
        required: true
      tag:
        description: 'New tag name'
        required: true

jobs:
  create_tag_and_release:
    runs-on: ubuntu-latest
    outputs:
      previous_tag: ${{ steps.get_previous_tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"

      - name: Create tag
        run: |
          git checkout ${{ github.event.inputs.branch }}
          git tag ${{ github.event.inputs.tag }}
          git push origin ${{ github.event.inputs.tag }}

      - name: Get previous tag
        id: get_previous_tag
        run: |
          PREV_TAG=$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)
          echo "Previous tag: $PREV_TAG"
          echo "::set-output name=tag::$PREV_TAG"

      - name: Create Release Notes
        id: create_release_notes
        run: |
          echo 'RELEASE_BODY<<EOF' > release_notes.txt
          COMMITS=$(git log --merges --pretty=format:"- %s" ${{ steps.get_previous_tag.outputs.tag }}..${{ github.event.inputs.tag }} --abbrev-commit | grep "Merge pull request #" | awk '{print substr($0, index($0,$3)) }')
          for COMMIT in $COMMITS
          do
            PR_NUM=$(echo $COMMIT | cut -d "#" -f 2 | cut -d " " -f 1)
            PR_TITLE=$(curl --location --request GET 'https://api.github.com/repos/${{ github.repository }}/pulls/'$PR_NUM -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GH_API_TOKEN }}' | jq -r '.title')
            echo "- #$PR_NUM $PR_TITLE" >> release_notes.txt
          done
          echo 'EOF' >> release_notes.txt

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          body_path: release_notes.txt
